---
# Get an inventory of Redhat VM's from CMDBuild
- import_playbook: cmdbuild_auth.yml

- vars:
    - session_id: ""
    - OS: RedHat
    - inv_tmp_file: /tmp/rh_inventory.tmp
    - inv_file: /tmp/rh_inventory.ini
    - name: "Query CMDBuild for {{ OS }} servers"
- uri:
    url: "{{ cmdb_base_url }}/classes/{{ server_class }}/cards?{{ os_filter_str }}"
    timeout: 30
    method: GET
    headers:
      Content-type: application/json
      Accept: '*/*'
      CMDBuild-Authorization: "{{ session_id }}"
    status_code: 200
  register: get_inv_reg
- file:
    path: "{{ item }}"
    state: absent
  with_items:
    - inv_tmp_file
    - inv_file

- name: Create inventory file
  block:
    - lineinfile:
        create: true
        dest: "{{ inv_tmp_file }}"
        line: "{{ item.Hostname }}"
      with_items: "{{ get_inv_reg.json.data }}"
      when:
        - item._Host_Status_description is search('Live')
    - shell: /usr/bin/sort "{{ inv_tmp_file }}" > "{{ inv_file }}"
      args:
        warn: false
    - shell: /usr/bin/grep rrl "{{ inv_file }}" > "{{ inv_tmp_file }}"
      args:
        warn: false
    - lineinfile:
        dest: "{{ inv_file }}"
        regexp: '^rrl*'
        state: absent
    - slurp:
        src: "{{ inv_tmp_file }}"
      register: inv_tmp_file_reg
    - name: Reorder Prod servers
      lineinfile:
        dest: "{{ inv_file }}"
        line: "{{ inv_tmp_file_reg['content'] | b64decode }}"
        insertafter: '^pvl*'
    - name: Insert hostgroup delimiters
      lineinfile:
        dest: "{{ inv_file }}"
        line: "[{{ item.name }}]"
        insertbefore: "{{ item.regex }}"
        firstmatch: true
      with_items:
        - name: lab
          regex: '^lrl*'
        - name: dev
          regex: '^drl*'
        - name: test
          regex: '^trl*'
        - name: stress
          regex: '^srl*'
        - name: ppte
          regex: '^qrl*'
        - name: prod
          regex: '^prl*'
  when: get_inv_reg.json.data != ""
  
