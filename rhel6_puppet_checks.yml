---
# Check for expired Puppet cacerts
- hosts: all
  become: true
  become_user: root
  become_method: sudo
  ignore_errors: true
  serial: 50
  environment:
    PATH: /usr/bin:{{ ansible_env.PATH }}
  vars:
    - ca_cert: /var/lib/puppet/ssl/certs/ca.pem
    - puppet_conf_file: /etc/puppet/puppet.conf

  tasks:
    - name: BLOCK - OS is RHEL6
      block:
        - service_facts:
          register: puppet_svc_facts_reg
        - name: BLOCK - Puppet Service Exists
          block:
            - set_fact:
                puppet_svc_status: "{{ ansible_facts.services['puppet'].status }}"
            - set_fact:
                puppet_svc_state: "{{ ansible_facts.services['puppet'].state }}"
            - shell: grep noop "{{ puppet_conf_file }}" | awk '{print $3}'
              args:
                warn: false
              register: noop_reg
            - name: Check Puppet cacert
              stat:
                path: "{{ ca_cert }}"
              register: cacert_stat_reg
            - name: Get end date for cert
              shell: openssl  x509 -enddate -in "{{ ca_cert }}" | grep notAfter
              args:
                warn: false
              register: ca_cert_reg
              when: cacert_stat_reg.stat.exists
            - name: Check if cert has expired via checkend flag
              shell: openssl x509 -checkend 0 -noout -in "{{ ca_cert }}"
              args:
                warn: false
              register: ca_cert_exp_reg
              # Ignore return codes - rc=0 cert is valid | rc=1 cert has expired
              failed_when: ca_cert_exp_reg.rc not in [0,1]
              when: cacert_stat_reg.stat.exists
            - set_fact:
                puppet_cert_expired: "Expired: {{ ca_cert_reg.stdout }}"
              when:
                - ca_cert_exp_reg.rc == 1
                - cacert_stat_reg.stat.exists
            - set_fact:
                puppet_cert_expired: "Current: {{ ca_cert_reg.stdout }}"
              when:
                - ca_cert_exp_reg.rc == 0
                - cacert_stat_reg.stat.exists
            # CSV style output
            - debug:
                msg: |
                  "{{ group_names }},{{ inventory_hostname }},RHEL {{ ansible_facts['distribution_version'] }},
                   {{ puppet_svc_status }} and {{ puppet_svc_state }},{{ noop_reg.stdout }},{{ puppet_cert_expired }}"
          when:
            - puppet_svc_facts_reg is search('puppet')
      when:
        - ansible_facts['distribution_major_version'] is version( '6', '==')
        
